// ===================================
        // Import Firebase
        // ===================================
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { 
            getFirestore, 
            collection, 
            addDoc,
            serverTimestamp
        } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        console.log('üöÄ Starting Booking System...');

        // ===================================
        // Firebase Configuration
        // ===================================
        const firebaseConfig = {
            apiKey: "AIzaSyBySeWqMxCrBI4oIEXwaCJnsjUbPW3afN4",
            authDomain: "lunaroomspa.firebaseapp.com",
            databaseURL: "https://lunaroomspa-default-rtdb.asia-southeast1.firebasedatabase.app",
            projectId: "lunaroomspa",
            storageBucket: "lunaroomspa.firebasestorage.app",
            messagingSenderId: "299973663585",
            appId: "1:299973663585:web:9c3a5be0768e1eaa58c320",
            measurementId: "G-5KF6ZJ7XDW"
        };

        // Initialize Firebase
        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);

        console.log('‚úÖ Firebase initialized');
        console.log('‚úÖ Firestore connected:', db ? 'Yes' : 'No');

        // ===================================
        // Package treatments mapping
        // ===================================
        const treatments = {
            'massage': [
                '1.Thai Relaxing Massage - ‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢  (350 ‚Äì 600 ‡∏ø / 60 ‡∏ô‡∏≤‡∏ó‡∏µ)',
                '2.Thai Oil Massage - ‡∏ô‡∏ß‡∏î‡πÑ‡∏ó‡∏¢‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô  (450 ‚Äì 700 ‡∏ø / 60 ‡∏ô‡∏≤‡∏ó‡∏µ)',
                '3.Hot Stone Massage - ‡∏ô‡∏ß‡∏î‡∏´‡∏¥‡∏ô‡∏£‡πâ‡∏≠‡∏ô  (600 ‚Äì 1,200 ‡∏ø / 60 ‡∏ô‡∏≤‡∏ó‡∏µ)',
                '4.Aromatherapy Massage - ‡∏ô‡∏ß‡∏î‡∏≠‡πÇ‡∏£‡∏°‡∏≤‡πÄ‡∏ó‡∏≠‡∏£‡∏≤‡∏û‡∏µ  (600 ‚Äì 1,000 ‡∏ø / 60 ‡∏ô‡∏≤‡∏ó‡∏µ)',
                '5.Herbal Compress Massage - ‡∏ô‡∏ß‡∏î‡∏õ‡∏£‡∏∞‡∏Ñ‡∏ö‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£  (700 ‚Äì 1,200 ‡∏ø / 60 ‡∏ô‡∏≤‡∏ó‡∏µ)',
                '6.Leg/Foot/Neck/Shoulder Massage - ‡∏ô‡∏ß‡∏î‡∏Ç‡∏≤‚Äë‡πÄ‡∏ó‡πâ‡∏≤‚Äë‡∏Ñ‡∏≠‚Äë‡∏ö‡πà‡∏≤‚Äë‡πÑ‡∏´‡∏•‡πà  (300 ‚Äì 500 ‡∏ø / 30‚Äì60 ‡∏ô‡∏≤‡∏ó‡∏µ)',
                '7.Office Syndrome Massage - ‡∏ô‡∏ß‡∏î‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏®‡∏ã‡∏¥‡∏ô‡πÇ‡∏î‡∏£‡∏°  (450 ‚Äì 700 ‡∏ø / 60 ‡∏ô‡∏≤‡∏ó‡∏µ )',
                '8.Body Scrub / Facial Spa - ‡∏™‡∏Ñ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏ß‡∏Å‡∏≤‡∏¢ / ‡∏™‡∏õ‡∏≤‡∏´‡∏ô‡πâ‡∏≤  (500 ‚Äì 1,000 ‡∏ø / 60 ‡∏ô‡∏≤‡∏ó‡∏µ) '
            ],
            'onsen': [
                '1. Hot Bath + Sauna + Steam  (300 ‡∏ø)',
                '2.Public Onsen Bath  (400 ‚Äì 600 ‡∏ø)',
            ],
            'waxing': [
                '1.Underarm Wax  (150 ‚Äì 250 ‡∏ø)',
                '2.Bikini Line Wax  (400 ‚Äì 600 ‡∏ø)',
                '3.Full Leg Wax (500 ‚Äì 700 ‡∏ø)',
                '4.Facial Wax (Forehead, Eyebrows, Sideburns) (899 (‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô) ‡∏ø)',
            ]
        };

        // Package names mapping
        const packageNames = {
            'massage': 'MASSAGE - ‡∏ô‡∏ß‡∏î‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢',
            'onsen': 'ONSEN - ‡∏≠‡∏≠‡∏ô‡πÄ‡∏ã‡πá‡∏ô‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô',
            'waxing': 'WAXING - ‡πÅ‡∏ß‡πá‡∏Å‡∏ã‡πå‡∏Ç‡∏ô'
        };

        // ===================================
        // Set minimum date to today
        // ===================================
        const dateInput = document.getElementById('date');
        const today = new Date().toISOString().split('T')[0];
        dateInput.setAttribute('min', today);

        console.log('‚úÖ Date input configured');

        // ===================================
        // Package change handler
        // ===================================
        const packageSelect = document.getElementById('package');
        const treatmentOptions = document.getElementById('treatmentOptions');
        const treatmentSelect = document.getElementById('treatment');

        packageSelect.addEventListener('change', function() {
            const selectedPackage = this.value;
            
            console.log('üì¶ Package selected:', selectedPackage);
            
            // Clear previous options
            treatmentSelect.innerHTML = '<option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏£‡∏µ‡∏ó‡πÄ‡∏°‡∏ô‡∏ï‡πå</option>';
            
            // Check if package has treatment options
            if (treatments[selectedPackage]) {
                // Show treatment options
                treatmentOptions.classList.add('show');
                
                // Add new options
                treatments[selectedPackage].forEach(treatment => {
                    const option = document.createElement('option');
                    option.value = treatment;
                    option.textContent = treatment;
                    treatmentSelect.appendChild(option);
                });
                
                treatmentSelect.required = true;
                console.log('‚úÖ Treatment options loaded');
            } else {
                // Hide treatment options
                treatmentOptions.classList.remove('show');
                treatmentSelect.required = false;
            }
        });

        console.log('‚úÖ Package selector configured');

        // ===================================
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏•‡∏á Firebase
        // ===================================
        async function saveBooking(bookingData) {
            try {
                console.log('üíæ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á...', bookingData);
                
                const docRef = await addDoc(collection(db, 'bookings'), bookingData);
                
                console.log('‚úÖ‚úÖ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Document ID:', docRef.id);
                return { success: true, id: docRef.id };
                
            } catch (error) {
                console.error('‚ùå‚ùå‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', error);
                console.error('Error details:', error.message);
                return { success: false, error: error.message };
            }
        }

        // ===================================
        // Test Firebase Connection
        // ===================================
        window.testFirebaseConnection = async function() {
            try {
                console.log('üß™ Testing Firebase connection...');
                const testData = {
                    test: true,
                    message: 'Test from booking page',
                    timestamp: serverTimestamp()
                };
                const docRef = await addDoc(collection(db, 'test'), testData);
                console.log('‚úÖ Firebase connection successful! Test document ID:', docRef.id);
                alert('‚úÖ Firebase ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\nTest Document ID: ' + docRef.id);
                return true;
            } catch (error) {
                console.error('‚ùå Firebase connection failed:', error);
                alert('‚ùå Firebase ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:\n' + error.message);
                return false;
            }
        };

        console.log('‚úÖ Test function ready: testFirebaseConnection()');

        // ===================================
        // Form submission
        // ===================================
        const bookingForm = document.getElementById('bookingForm');

        if (!bookingForm) {
            console.error('‚ùå‚ùå‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Form #bookingForm');
        } else {
            console.log('‚úÖ Form found, adding listener...');
            
            bookingForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                console.log('üéØ Form submitted!');
                
                // Disable submit button to prevent double submission
                const submitBtn = this.querySelector('.submit-btn');
                const originalText = submitBtn.textContent;
                submitBtn.disabled = true;
                submitBtn.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...';
                
                try {
                    // ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
                    const dateValue = document.getElementById('date').value;
                    const timeValue = document.getElementById('time').value;
                    const packageValue = document.getElementById('package').value;
                    const treatmentValue = treatmentSelect.value || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
                    
                    console.log('üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°:', {
                        date: dateValue,
                        time: timeValue,
                        packageId: packageValue,
                        treatment: treatmentValue
                    });
                    
                    const formData = {
                        date: dateValue,
                        time: timeValue,
                        packageId: packageValue,
                        packageName: packageNames[packageValue],
                        treatmentName: treatmentValue,
                        Status: '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
                        createdAt: serverTimestamp()
                    };
                    
                    console.log('üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', formData);
                    
                    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Firebase
                    console.log('üíæ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Firebase...');
                    const result = await saveBooking(formData);
                    
                    if (result.success) {
                        console.log('‚úÖ‚úÖ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Document ID:', result.id);
                        
                        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                        alert(`‚úÖ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${formData.date}\n‡πÄ‡∏ß‡∏•‡∏≤: ${formData.time}\n‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à: ${formData.packageName}\n‡∏ó‡∏£‡∏µ‡∏ó‡πÄ‡∏°‡∏ô‡∏ï‡πå: ${formData.treatmentName}\n\n‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á: #${result.id.substring(0, 10).toUpperCase()}\n\n‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞`);
                        
                        // ‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ My Account ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                        const goToAccount = confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?');
                        if (goToAccount) {
                            window.location.href = '/src/pages/Myaccount.html';
                        } else {
                            // Reset form
                            this.reset();
                            treatmentOptions.classList.remove('show');
                        }
                    } else {
                        console.error('‚ùå‚ùå‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', result.error);
                        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
                        alert(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î\n\n${result.error}\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á`);
                    }
                    
                } catch (error) {
                    console.error('‚ùå‚ùå‚ùå Error:', error);
                    alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î:\n' + error.message);
                } finally {
                    // Enable submit button again
                    submitBtn.disabled = false;
                    submitBtn.textContent = originalText;
                }
            });
            
            console.log('‚úÖ Form listener installed successfully!');
        }

        console.log('üéâ Booking system ready!');
        console.log('üí° ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢: testFirebaseConnection()');